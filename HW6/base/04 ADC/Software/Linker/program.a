;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;unsigned char int_to_char(int x) {
; 0000 0005 unsigned char int_to_char(int x) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0006 	return x + '0';
;PCODE: $0000000F VOL: 0
;	x -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0007 }
;PCODE: $00000014 VOL: 0
;
;void put_on_lcd(int value, int c) {
; 0000 0009 void put_on_lcd(int value, int c) {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000A 	unsigned int r = 1;
; 0000 000B 	unsigned char tens = int_to_char(value / 10);
; 0000 000C 	unsigned char ones = int_to_char(value % 10);
; 0000 000D 	lcd_gotoxy(c, r);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;	value -> Y+6
;	c -> Y+4
;	r -> R16,R17
;	tens -> R19
;	ones -> R18
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 000E 	lcd_putchar(tens);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 000F 	lcd_gotoxy(c + 1, r);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0010 	lcd_putchar(ones);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0011 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input) {
; 0000 0017 unsigned int read_adc(unsigned char adc_input) {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0018 	ADMUX = adc_input | ADC_VREF_TYPE;
;PCODE: $0000003A VOL: 0
;	adc_input -> Y+0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0019 	// Delay needed for the stabilization of the ADC input voltage
; 0000 001A 	delay_us(10);
;PCODE: $0000003E VOL: 0
; 0000 001B     // Start the AD conversion
; 0000 001C     ADCSRA |= (1 << ADSC);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 001D     // Wait for the AD conversion to complete
; 0000 001E     while ((ADCSRA & (1 << ADIF)) == 0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 001F     ADCSRA |= (1 << ADIF);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0020     return ADCW;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0021 }
;PCODE: $0000004C VOL: 0
;
;void main(void) {
; 0000 0023 void main(void) {
;PCODE: $0000004D VOL: 0
; 0000 0024     int temprature;
; 0000 0025 
; 0000 0026     // ADC initialization
; 0000 0027     // ADC Clock frequency: 250.000 kHz
; 0000 0028     // ADC Voltage Reference: AVCC pin
; 0000 0029     // ADC Auto Trigger Source: ADC Stopped
; 0000 002A     ADMUX |= (1<<MUX0);
;	temprature -> R16,R17
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002B     //ADMUX=ADC_VREF_TYPE;
; 0000 002C     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002D     SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002E 
; 0000 002F     lcd_init(16);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0030 
; 0000 0031     lcd_gotoxy(3, 0);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0032     lcd_puts("LM35 Sensor");
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0033 
; 0000 0034     lcd_gotoxy(2, 1);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0035     lcd_puts("Temp :");
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0036 
; 0000 0037     lcd_gotoxy(12, 1);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0038     lcd_putchar(223);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0039 
; 0000 003A     lcd_gotoxy(13, 1);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 003B     lcd_puts("C");
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 003C 
; 0000 003D     while (1) {
;PCODE: $00000071 VOL: 0
; 0000 003E         temprature = read_adc(0);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 003F         temprature = temprature * 0.48898;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0040         put_on_lcd(temprature, 9);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0041         delay_ms(100);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0042     }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0043 }
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0

	.DSEG
_0x6:
	.BYTE 0x15
